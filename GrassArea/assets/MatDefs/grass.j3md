MaterialDef Simple {
    MaterialParameters {
        Float GrassDist
        Texture2D ColorMap
        Texture2D Dissolve
    }
    Technique {
        WorldParameters {
            ProjectionMatrix
            ViewMatrix
            CameraPosition
            WorldMatrix
        }
        VertexShaderNodes {
            ShaderNode grassv {
                Definition : grassv : MatDefs/grassv.j3sn
                InputMappings {
                    modelPosition = Global.position.xyz
                    projectionMatrix = WorldParam.ProjectionMatrix
                    viewMatrix = WorldParam.ViewMatrix
                    cameraPosition = WorldParam.CameraPosition
                    texCoord2 = Attr.inTexCoord2
                    texCoord1 = Attr.inTexCoord
                    worldMatrix = WorldParam.WorldMatrix
                    texCoord3 = Attr.inTexCoord3
                }
                OutputMappings {
                    Global.position = projPosition
                }
            }
        }
        FragmentShaderNodes {
            ShaderNode grassf {
                Definition : grassf : MatDefs/grassf.j3sn
                InputMappings {
                    colorToMix = grassv.colorToMix
                    texCoord = grassv.texCoord1
                    camDist = grassv.camDist
                    diffuseLight = grassv.diffuseLight
                    grassDist = MatParam.GrassDist
                    texture = MatParam.ColorMap
                    dissolveTexture = MatParam.Dissolve
                    minX = grassv.minX
                    texSize = grassv.texSize
                }
                OutputMappings {
                    Global.color = outColor
                }
            }
        }
    }
}